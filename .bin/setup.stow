#!/usr/bin/env bash

set -euxo pipefail
cd ~/src/config

# funcs
rmf() { rm -vrf "$@" || true; }
emptyDir() { rmf "$1" && mkdir -p "$1"; }
ensureDir() { mkdir -p "$1" || true; }
commandExists() { command -v "$@" >/dev/null 2>&1; }
isLinux() { if [[ "$OSTYPE" == "linux-gnu"* ]]; then return 0; else return 1; fi; }
isDarwin() { if [[ "$OSTYPE" == "darwin"* ]]; then return 0; else return 1; fi; }

# precheck
precheck() {
  commandExists stow
}

cleanup() {
  emptyDir $HOME/.config/fish
  emptyDir $HOME/.config/alacritty
  emptyDir $HOME/.config/youtube-dl
  emptyDir $HOME/.config/bat
  emptyDir $HOME/.config/bc
  emptyDir $HOME/.config/colorls
  emptyDir $HOME/.config/aria2
  emptyDir $HOME/.config/fontconfig
  emptyDir $HOME/.config/mpv
  emptyDir $HOME/.config/TabNine
  emptyDir $HOME/.config/vifm
  emptyDir $HOME/.config/fcitx
  emptyDir $HOME/.config/pulse
  emptyDir $HOME/.config/nvim
  emptyDir $HOME/.config/nvim/autoload
  emptyDir $HOME/.config/elvish/lib
  emptyDir $HOME/.ssh
  rmf $HOME/.local/share/elvish/lib
  ensureDir $HOME/.local/share/elvish/lib

  rmf $HOME/.gitmodules
  rmf $HOME/.fzf
  rmf $HOME/.duti
  rmf $HOME/.images
  rmf $HOME/.local/share/nvim/site/pack
  rmf $HOME/.hammerspoon
  rmf $HOME/.scripts
  rmf $HOME/.oh-my-zsh
  rmf $HOME/.config/gh
  rmf $HOME/.config/gtk-3.0
  rmf $HOME/.config/caddy
  rmf $HOME/.config/gcloud
  rmf $HOME/.rok-te3
  rmf $HOME/.scim
  rmf $HOME/.bin
  rmf $HOME/.config/sxhkd
  rmf $HOME/.Brewfile*
  rmf $HOME/.config/fd
  rmf $HOME/.config/zathura
  rmf $HOME/.config/fcitx5
  rmf $HOME/.config/autorandr
  rmf $HOME/.config/karabiner
  rmf $HOME/.config/dunst
  rmf $HOME/.config/bspwm
  rmf $HOME/.config/brew
  rmf $HOME/.config/picom
  rmf $HOME/.config/yt-dlp
  rmf $HOME/.config/libvirt
  rmf $HOME/.config/firefox
  rmf $HOME/.config/elvish/rc.elv
  rmf $HOME/.config/chrome-flags.conf
  rmf $HOME/.dir_colors
  rmf $HOME/.npmrc.global
  rmf $HOME/.submodules
  rmf $HOME/.tigrc
  rmf $HOME/.zsh
  rmf $HOME/.zshenv
  rmf $HOME/.config/.jira
  rmf $HOME/.config/mimeapps.list
  rmf $HOME/.config/hub
  rmf $HOME/.config/kitty
  rmf ~/.oh-my-zsh
  rmf ~/.inputrc
  rmf ~/.bashrc
  rmf ~/.tool-versions
  rmf ~/.asoundrc
  rmf ~/.bcrc
  rmf ~/.xprofile
  rmf ~/.aws
  rmf ~/.moprc
  rmf ~/.zshrc
  rmf ~/.Xresources
  rmf ~/.tool-versions
  rmf ~/.xinitrc
  rmf ~/.Xmodmap
  rmf ~/.bash_profile
  rmf ~/.bash_defaults
  rmf ~/.tmux.conf
  rmf ~/.w3m
  rmf ~/.xsession
  rmf ~/.yabairc
  rmf ~/.zshrc
  rmf ~/.pacman
  rmf ~/.pam_environment
  rmf ~/.gitignore
  rmf ~/.gitignore_global
  rmf ~/.ripgreprc
  rmf ~/.ideavimrc
  rmf ~/.tridactylrc
  rmf ~/.ansible.cfg
  rmf ~/.config/.ideavimrc
  rmf ~/.config/autostart
  rmf ~/.config/surfingkeys
  rmf ~/.config/grobi.conf
  rmf ~/.config/rofi
  rmf ~/.config/wezterm
  rmf ~/.skhdrc
  rmf ~/.gitconfig*
  rmf ~/.netrc
  rmf ~/.gnupg
  rmf ~/.ticker.yaml
  rmf ~/.slack-term
  rmf ~/.tmux
  rmf ~/.config/systemd/user/*.service
  mkdir -p $HOME/.config/systemd/user
  mkdir -p $HOME/bin
  mkdir -p $HOME/.kube
  emptyDir ~/.local/share/nvim/site/pack/paqs
  ensureDir $HOME/.config/autostart
  ensureDir $HOME/.ssh
  rmf $HOME/.ssh/config
}

update() {
  commandExists zoxide && zoxide init fish >dotfiles/.config/fish/zoxide.fish
  commandExists zoxide && zoxide init elvish >dotfiles/.config/elvish/lib/zoxide.elv
  commandExists pueue && pueue completions elvish dotfiles/.config/elvish/lib
}

firefox() {
  commandExists fd || return 0
  for d in "${HOME}/Library/Application Support/Firefox/Profiles/" "${HOME}/.mozilla/firefox"; do
    [[ -d "$d" ]] || continue
    for profileDir in "$(fd --base-directory "$d" --absolute-path --max-depth 1 --type d | grep default-release | head -n 1)"; do
      rm -rfv "$profileDir/chrome" || true
      mkdir "$profileDir/chrome" || true
      (cd dotfiles/.config/firefox && stow -v --target "$profileDir/chrome" chrome) || return 1
    done
  done
}

##########################################

precheck
cleanup
# update

stow -v --target ${HOME} "dotfiles"
[[ -d "dotfiles.shared" ]] && sudo stow -v --target ${HOME} "dotfiles.shared"
[[ -d "dotfiles.root.$HOSTNAME" ]] && sudo stow -v --target / "dotfiles.root.$HOSTNAME"


firefox

echo "done"
