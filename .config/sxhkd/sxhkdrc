#hvimh set foldmethod=marker commentstring=#\ %s:

# | yabai   | bspwm   |
# | ---     | ---     |
# | window  | node    |
# | space   | desktop |
# | display | monitor |


# alt + h
#   bspc node @parent -R 90

super + m
  xdo activate -n telegram-desktop;

super + x
  alacritty;

# TODO find appropriate usage
# jttps://github.com/baskerville/bspwm/issues/900
super + b
  bspc node @parent -R 90

# focus & and swap node in the given direction
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}
super + {h,j,k,l}
  bspc node -f {west,south,north,east}
# super + shift + {h,j,k,l}
#   bspc node -m {west,south,north,east}
  # bspc node -m {prev,next};

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '{1-9,10}'

# focus last desktop
super + Tab
	bspc desktop -f last

# focus the next/previous desktop in the current monitor
super + {semicolon,apostrophe}
	bspc desktop -f {prev,next}.local;

super + shift + {semicolon, apostrophe}
  bspc node -d {prev,next}.local;

# focus & move next/previous monitor
super + bracket{left,right}
  bspc monitor -f {prev,next};
super + shift + bracket{left,right}
  bspc node -m {prev,next};

# focus last window (limit to current desktop)
super + w
  bspc node -f prev.local

# toggle window fullscreen
super + f
    if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
        bspc node focused -t fullscreen; \
    else \
        bspc node focused -t tiled; \
    fi


# space, float / unfloat window and center on screen
super + space
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
        ~/src/configs/dotfiles/.bin/bspc.center; \
    else \
        bspc node focused -t tiled; \
    fi

# space, float / unfloat window and center on screen
super + c
    ~/config/scripts/bspc.center

# resize
super + z; h
	bspc node -z left -100 0; \
	bspc node -z right -100 0;
super + z; j
	bspc node -z bottom 0, 100; \
	bspc node -z top 0 100;
super + z; k
	bspc node -z top 0 -100; \
	bspc node -z bottom 0 -100;
super + z; l
	bspc node -z right 100 0; \
	bspc node -z left 100 0;


# Resize floating windows
super + shift + {Left,Right,Up,Down}
    xdo resize {-w -20,-w +20,-h -20,-h +20}    bspc window -e {left -10,down +10,up -10,right +10} || {right -10,up +10,down -10,left +10}

# quit / restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r}


super + Return
  rofi -combi-modi window,drun,run -show combi -modi combi;

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; /home/rok/.bin/key.xmodmap_reset;

# bspwm hotkeys
#

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
# super + m
# 	bspc desktop -l next

# send the newest marked node to the newest preselected node
# super + y
# 	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
# super + g
# 	bspc node -s biggest

#
# state/flags
#

# # set the window state
# super + {t,shift + t,s}
# 	bspc node -t {tiled,pseudo_tiled,floating}

# set the window state
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}


	# # bspc node -t {tiled,pseudo_tiled,floating}
    # # if [ -z "$(bspc query -N -n focused.floating)" ]; then \
    # #     bspc node focused -t floating; \
    # # else \
    # #     bspc node focused -t tiled; \
    # # fi
    # bspc node focused -t floating



# set the node flags
# super + ctrl + {m,x,y,z}
# 	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node for the given path jump
# super + {p,b,comma,period}
# 	bspc node -f @{parent,brother,first,second}

# # focus the next/previous node in the current desktop
# super + {_,shift + }c
# 	bspc node -f {next,prev}.local



# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on






#
# preselect
#

# # preselect the direction
# super + ctrl + {h,j,k,l}
# 	bspc node -p {west,south,north,east}

# # preselect the ratio
# super + ctrl + {1-9}
# 	bspc node -o 0.{1-9}

# # cancel the preselection for the focused node
# super + ctrl + space
# 	bspc node -p cancel

# # cancel the preselection for the focused desktop
# super + ctrl + shift + space
# 	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# super + a
 # bspc node -z {}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# # Move window to next desktop and focus on it #563 
# super + shift + {semicolon,apostrophe}
#   DIR={next,prev}; \
#    bspc node -d "$DIR"; 
#    bspc desktop -f "$DIR"

# focus the node in the given direction
# super + {_,shift + }{h,j,k,l}
# 	bspc node -{f,s} {west,south,north,east}

XF86Audio{Lower,Raise}Volume
  pactl set-sink-volume @DEFAULT_SINK@ {-1000,+1000}
XF86AudioMute
  pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86MonBrightnessDown
  sudo backlight.down

XF86MonBrightnessUp
  sudo backlight.up

Print
  /usr/bin/maim -s /home/rok/capture.png 



# super + p
#     import png:- | xclip -selection clipboard -t image/png

super + shift + p
  /usr/bin/maim -s /home/rok/tmp/capture.png 

super + p
  maim -s --format png /dev/stdout | xclip -selection clipboard -t image/png -i

  # scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/ ' && notify-send 'Screenshot captured'
